{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"trainer__layout-trainer-question\"\n}, [/*#__PURE__*/_createTextVNode(\" What is the \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"trainer__layout-trainer-question\",\n  style: {\n    \"font-style\": \"italic\"\n  }\n}, \" past participle \"), /*#__PURE__*/_createTextVNode(\" of: \")]), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"trainer__layout-trainer-question\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer-counter\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  role: \"progressbar\",\n  class: \"progress-bar bg-success progress-bar-striped\",\n  style: {\n    \"width\": \"5%\"\n  },\n  \"aria-valuenow\": \"5\",\n  \"aria-valuemin\": \"0\",\n  \"aria-valuemax\": \"100\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer-word\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"trainer-input\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"trainer__layout-trainer-input\",\n  onkeypress: \"enterKeyPressed(event)\",\n  id: \"trainer-input\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer-submit\",\n  onclick: \"checkAnswer()\"\n}, \" Submit \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer-answer\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"trainer__layout-trainer-dev_field\"\n})])], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAiDQ,KAjDR,EAiDQ;EAjDHC,KAAK,EAAC;AAiDH,CAjDR,EAA4B,cACxBD,oBA8CM,KA9CN,EA8CM;EA9CDC,KAAK,EAAC;AA8CL,CA9CN,EAAoC,cAClCD,oBAMI,GANJ,EAMI;EANDC,KAAK,EAAC;AAML,CANJ,EAA2C,+BAAC,gBAAD,eAC7BD,oBAAI,IAAJ,CAD6B,eAEzCA,oBAEO,MAFP,EAEO;EAFDC,KAAK,EAAC,kCAEL;EAFwCC,KAA2B,EAA3B;IAAA;EAAA;AAExC,CAFP,EAA2E,mBAA3E,CAFyC,gCAIlC,QAJkC,CAA3C,CADkC,eAQhCF,oBACO,MADP,EACO;EADDC,KAAK,EAAC;AACL,CADP,CARgC,eAUlCD,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,CAVkC,eAalCD,oBAWM,KAXN,EAWM;EAXDC,KAAK,EAAC;AAWL,CAXN,EAAqB,cACnBD,oBASM,KATN,EASM;EARJG,IAAI,EAAC,aAQD;EAPJF,KAAK,EAAC,8CAOF;EALJC,KAAkB,EAAlB;IAAA;EAAA,CAKI;EAJJ,iBAAc,GAIV;EAHJ,iBAAc,GAGV;EAFJ,iBAAc;AAEV,CATN,CADmB,CAArB,CAbkC,eAyBlCF,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,CAzBkC,eA4BlCD,oBAOQ,OAPR,EAOQ;EAPDI,GAAG,EAAC;AAOH,CAPR,EAA0B,cACxBJ,oBAKC,OALD,EAKC;EAJCK,IAAI,EAAC,MAIN;EAHCJ,KAAK,EAAC,+BAGP;EAFCK,UAAU,EAAC,wBAEZ;EADCC,EAAE,EAAC;AACJ,CALD,CADwB,CAA1B,CA5BkC,eAoClCP,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC,gCAEL;EAFsCO,OAAO,EAAC;AAE9C,CAFN,EAAoE,UAApE,CApCkC,eAuClCR,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,CAvCkC,eA0ClCD,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,CA1CkC,CAApC,CADwB,CAA5B;;AAAA;;gCAkDED,oBAAW,KAAX,EAAW,IAAX,EAAW,IAAX,EAAW;AAAA;AAAX;;;6DAlDFS,YAkDEC","names":["_createElementVNode","class","style","role","for","type","onkeypress","id","onclick","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\IvanEndorphin\\Documents\\GitHub\\trainer_irregular_verbs\\src\\components\\past-participle\\past-participle.vue"],"sourcesContent":["<template>\r\n  <div class=\"trainer__layout\">\r\n      <div class=\"trainer__layout-trainer\">\r\n        <p class=\"trainer__layout-trainer-question\">\r\n          What is the <br>\r\n          <span class=\"trainer__layout-trainer-question\" style=\"font-style: italic;\">\r\n            past participle\r\n          </span>\r\n          of:\r\n        </p>\r\n          <span class=\"trainer__layout-trainer-question\">\r\n          </span>\r\n        <div class=\"trainer__layout-trainer-counter\">\r\n\r\n        </div>\r\n        <div class=\"progress\">\r\n          <div\r\n            role=\"progressbar\"\r\n            class=\"progress-bar\r\n            bg-success progress-bar-striped\"\r\n            style=\"width: 5%;\"\r\n            aria-valuenow=\"5\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          >\r\n          </div>\r\n        </div>\r\n        <div class=\"trainer__layout-trainer-word\">\r\n\r\n        </div>\r\n        <label for=\"trainer-input\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"trainer__layout-trainer-input\"\r\n            onkeypress=\"enterKeyPressed(event)\"\r\n            id=\"trainer-input\"\r\n          >\r\n        </label>\r\n        <div class=\"trainer__layout-trainer-submit\" onclick=\"checkAnswer()\">\r\n          Submit\r\n        </div>\r\n        <div class=\"trainer__layout-trainer-answer\">\r\n\r\n        </div>\r\n        <div class=\"trainer__layout-trainer-dev_field\">\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div></div>\r\n</template>\r\n\r\n<script>\r\nimport dictionary from \"../\";\r\n\r\nexport default {\r\n  name: 'PastParticiple',\r\n  setup() {\r\n    // import * as fs from 'fs';\r\n\r\n    const wordsArray = fs.readFileSync('./trainer_irregular_verbs.json');\r\n    console.log(wordsArray);\r\n    const word = document.querySelector('.trainer__layout-trainer-word');\r\n    const myAnswer = document.querySelector('.trainer__layout-trainer-input');\r\n    const error = document.querySelector('.trainer__layout-trainer-answer');\r\n    const wordCounter = document.querySelector('.trainer__layout-trainer-counter');\r\n    const devField = document.querySelector('.trainer__layout-trainer-dev_field');\r\n    let currentWord = 0;\r\n    let isAnswerCorrect = 'true';\r\n    let answer = 'dictionary[wordCounter].participle';\r\n    let randomWordArray = wordsArray.slice();\r\n    let mistakeArray = [];\r\n    let mistakeCounter = 0;\r\n\r\n    console.log('Hello');\r\n\r\n    start();\r\n\r\n    function start() {\r\n      randomizeArray();\r\n      checkRepeat();\r\n      // console.log(randomWordArray)\r\n      // console.log(dictionary)\r\n      changeWord();\r\n    }\r\n\r\n    function randomizeArray() {\r\n      randomWordArray.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    function changeWord() {\r\n      word.innerText = randomWordArray[currentWord].present;\r\n      answer = randomWordArray[currentWord].participle;\r\n      wordCounter.innerText = `${currentWord + 1} of ${randomWordArray.length}`;\r\n    }\r\n\r\n    // document.addEventListener('keyup', logKey);\r\n    //   function logKey(e) {\r\n    //     if(e.code === 'Enter'){\r\n    //       devField.innerText = e.code\r\n    //       checkAnswer()\r\n\r\n    //     }\r\n    // }\r\n\r\n    function enterKeyPressed(event) {\r\n      if (event.keyCode === 13) {\r\n        console.log('Enter key is pressed');\r\n        checkAnswer();\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    function checkAnswer() {\r\n      console.log(myAnswer.value);\r\n      console.log(answer);\r\n      if (myAnswer.value.toLowerCase() === answer) {\r\n        isAnswerCorrect = 'false';\r\n        correctAnswer();\r\n      } else {\r\n        wrongAnswer();\r\n      }\r\n      // console.log(answer.event.target.value)\r\n    }\r\n\r\n    function sleep(ms) {\r\n      return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n      });\r\n    }\r\n\r\n    async function correctAnswer() {\r\n      console.log('Correct');\r\n      error.innerText = 'Correct!';\r\n      error.style.color = 'green';\r\n      await sleep(1000);\r\n      error.innerText = '';\r\n      myAnswer.value = '';\r\n      checkEndGame();\r\n    }\r\n\r\n    async function wrongAnswer() {\r\n      console.log('wrong');\r\n      error.innerText = answer;\r\n      error.style.color = 'red';\r\n      mistakeCounter += 1;\r\n      await sleep(2000);\r\n      myAnswer.value = '';\r\n      error.innerText = '';\r\n\r\n      mistakeArray.push(randomWordArray[currentWord]);\r\n\r\n      checkEndGame();\r\n    }\r\n\r\n    function checkEndGame() {\r\n      currentWord += 1;\r\n      if (currentWord < randomWordArray.length) {\r\n        changeWord();\r\n      } else {\r\n        let correctAnswerCount = ((randomWordArray.length - mistakeCounter) * 100) / randomWordArray.length;\r\n        correctAnswerCount = Math.floor(correctAnswerCount);\r\n        alert(`Mistake: ${mistakeCounter}\\nCorrect: ${correctAnswerCount}%`);\r\n        restart();\r\n      }\r\n    }\r\n\r\n    function checkRepeat() {\r\n      let repeatCount = 0;\r\n      const repeatArray = [];\r\n      for (const word of randomWordArray) {\r\n        repeatCount = 0;\r\n        for (const wordCompare of randomWordArray) {\r\n          if (word === wordCompare) {\r\n            repeatCount += 1;\r\n            if (repeatCount > 1) {\r\n              repeatArray.push(wordCompare);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log('repeat', repeatArray);\r\n    }\r\n\r\n    function restart() {\r\n      currentWord = 0;\r\n      mistakeCounter = 0;\r\n      if (mistakeArray.length > 0) {\r\n        randomWordArray = mistakeArray.slice();\r\n        mistakeArray = [];\r\n      } else {\r\n        randomWordArray = wordsArray.slice();\r\n      }\r\n      changeWord();\r\n    }\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import 'past-participle.scss';\r\n</style>"]},"metadata":{},"sourceType":"module"}